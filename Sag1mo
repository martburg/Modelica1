model Sag;
  inner Modelica.Mechanics.MultiBody.World world annotation(Placement(visible = true,
                                                            transformation(origin = {-130, 70},
                                                            extent = {{-10, -10}, {10, 10}},
                                                            rotation = 0)));
  // Parameters
    parameter Integer                                          n = 4 "Number of springs";
    parameter Integer                                          m = n - 1 "Number of bodies";
    parameter Modelica.Units.SI.Position[3]                    f1_r = {-2, 0, 0} "Left fixed point";
    parameter Modelica.Units.SI.Position[3]                    f2_r = {2, 0, 0} "Right fixed point";
    parameter Modelica.Units.SI.TranslationalSpringConstant    c = 500 "Spring constant";
    parameter Modelica.Units.SI.Mass                           m_t = 1;
    final parameter Modelica.Units.SI.Length                   totalDistance = f2_r[1] - f1_r[1]; 
    final parameter Modelica.Units.SI.Length                   s_unstretched = totalDistance / n ;
    final parameter Modelica.Units.SI.Mass                     m_s = m_t / n;    
    final parameter Modelica.Units.SI.Acceleration             g = 9.81 "Gravity magnitude";  
  // Precomputed initial positions with sag due to gravity
    parameter Modelica.Units.SI.Position                       body_r_0[m,3] = computeInitialPositionsWithSag(f1_r,
                                                                                                              f2_r,
                                                                                                              m,
                                                                                                              m_s,
                                                                                                              g,
                                                                                                              c,
                                                                                                              s_unstretched);
  //
  //
  Modelica.Mechanics.MultiBody.Parts.Fixed fixed1(r = f1_r,
                                                  shapeType = "sphere",
                                                  length = 0.1,
                                                  width = 0.1,
                                                  height = 0.1,
                                                  r_shape = {fixed1.r[1] + (fixed1.length / 2), 0, 0},
                                                  lengthDirection = {-1, 0, 0},
                                                  color = {0, 180, 0})
                                                  annotation(Placement(visible = true,
                                                             transformation(origin = {-70, 0},
                                                             extent = {{-10, -10}, {10, 10}},
                                                             rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.Fixed fixed2(r = f2_r,
                                                  shapeType = "sphere", 
                                                  length = 0.1,
                                                  width = 0.1,
                                                  height = 0.1,                                                                                                     
                                                  r_shape = {fixed2.r[1] - (fixed2.length / 2), 0, 0},
                                                  lengthDirection = {1, 0, 0},
                                                  color = {0, 180, 0})
                                                  annotation(Placement(visible = true,
                                                             transformation(origin = {70, 0},
                                                             extent = {{10, -10}, {-10, 10}},
                                                             rotation = 0)));
  //
  //
  // Springs and Bodies
  Modelica.Mechanics.MultiBody.Forces.Spring                springs[n](each c = c,
                                                                       each s_unstretched = s_unstretched)
                                                                       annotation(Placement(visible = true,
                                                                                  transformation(origin = {-10, 0},
                                                                                  extent = {{-10, -10}, {10, 10}},
                                                                                  rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.Body                   bodies[m](each m = m_s,
                                                                      each r_0.fixed = false,
                                                                      r_0.start = body_r_0,
                                                                      each v_0.start = 0)
                                                                      annotation(Placement(visible = true,
                                                                                 transformation(origin = {0, -30},
                                                                                 extent = {{-10, -10}, {10, 10}},
                                                                                 rotation = -90)));   
  //
  //
  function computeInitialPositionsWithSag
    input Modelica.Units.SI.Position f1_r[3];
    input Modelica.Units.SI.Position f2_r[3];
    input Integer m;
    input Modelica.Units.SI.Mass m_s;
    input Modelica.Units.SI.Acceleration g;
    input Modelica.Units.SI.TranslationalSpringConstant c;
    input Modelica.Units.SI.Length s_unstretched;
    output Modelica.Units.SI.Position body_r_0[m, 3];
  protected
    constant Integer maxIter = 100;
    constant Modelica.Units.SI.Length tolerance = 1e-4;
    Modelica.Units.SI.Length dx = (f2_r[1] - f1_r[1])/(m + 1);
    Modelica.Units.SI.Force F_gravity = m_s*g;
    Modelica.Units.SI.Force H(start = c*(dx - s_unstretched));
    Modelica.Units.SI.Length dy[m];
    Real residual;
    Integer iter;
    Modelica.Units.SI.Length deltaY;
    Modelica.Units.SI.Length s;
  algorithm
  ******************************************
  **** This is the algorithm we are searching
  *******************************************
  end computeInitialPositionsWithSag;
//
//
equation
  // Connect fixed1 to first spring
  connect(fixed1.frame_b, springs[1].frame_a);

  // Connect springs and bodies
  for i in 1:m loop
    connect(springs[i].frame_b, bodies[i].frame_a);
    connect(bodies[i].frame_a, springs[i + 1].frame_a);
  end for;

  // Connect last spring to fixed2
  connect(springs[n].frame_b, fixed2.frame_b);
//
                                                             
  annotation(uses(Modelica(version = "4.0.0")), experiment(StopTime = 10.0), Diagram(coordinateSystem(extent = {{-150, -90}, {150, 90}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Rectangle(visible = true, lineColor = {0, 114, 195}, fillColor = {255, 255, 255}, extent = {{-100, -100}, {100, 100}}, radius = 25), Text(visible = true, textColor = {64, 64, 64}, extent = {{-150, 110}, {150, 150}}, textString = "%name")}));
end Sag;